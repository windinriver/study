package ProConsumer;class MyCondition{    private int number = 0;    // A B    C  D    public synchronized void increment() throws InterruptedException {        if (number !=  0) {            this.wait();        }        number ++;        System.out.println(Thread.currentThread().getName()+"\t"+number);        this.notifyAll();    }    public synchronized void decrement() throws InterruptedException {        if (number == 0) {            this.wait();        }        number --;        System.out.println(Thread.currentThread().getName() +"\t" + number);        this.notifyAll();    }    public static void main(String[] args) {        MyCondition myCondition =  new MyCondition();        new Thread(new Runnable() {            @Override            public void run() {                for (int i = 0; i < 10; i++) {                    try {                        myCondition.increment();                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }        },"A").start();        new Thread(new Runnable() {            @Override            public void run() {                for (int i = 0; i < 10; i++) {                    try {                        myCondition.decrement();                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }        },"B").start();        new Thread(new Runnable() {            @Override            public void run() {                for (int i = 0; i < 10; i++) {                    try {                        myCondition.increment();                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }        },"C").start();        new Thread(new Runnable() {            @Override            public void run() {                for (int i = 0; i < 10; i++) {                    try {                        myCondition.decrement();                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                }            }        },"D").start();    }}public class ProdConsumerDemo {}